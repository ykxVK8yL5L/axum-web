name: Release For All

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        default: 'v0.0.4'
jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          profile: minimal
          default: true
      - name: Build wheels - x86_64
        uses: messense/maturin-action@v1
        with:
          target: x86_64-apple-darwin
          args: --release --out dist --strip
          
      - name: Build wheels - universal2
        uses: messense/maturin-action@v1
        with:
          args: --release --universal2 --out dist --strip 
          
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
          if-no-files-found: error
      
      - name: Upload binary artifacts
        uses: actions/upload-artifact@v2
        with:
          name: apple-darwin-bin
          path: target/release/axum-web
          if-no-files-found: error
      - name: Archive binary
        run: |
          cd target/release
          tar czvf axum-web-${{ github.event.inputs.tag }}.apple-darwin.tar.gz axum-web
          shasum -a 256 axum-web-${{ github.event.inputs.tag }}.apple-darwin.tar.gz > axum-web-${{ github.event.inputs.tag }}.apple-darwin.tar.gz.sha256
          cd -
      - name: Upload binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/axum-web*.tar.gz
          file_glob: true
          overwrite: true
          tag: "refs/tags/${{ github.event.inputs.tag }}"
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [
          { target: "x86_64-unknown-linux-musl", image_tag: "x86_64-musl", wheel: true },
          { target: "i686-unknown-linux-musl", image_tag: "i686-musl", wheel: true },
          { target: "aarch64-unknown-linux-musl", image_tag: "aarch64-musl", wheel: true },
          { target: "armv7-unknown-linux-musleabihf", image_tag: "armv7-musleabihf", wheel: true },
          { target: "armv7-unknown-linux-musleabi", image_tag: "armv7-musleabi", wheel: false },
          { target: "arm-unknown-linux-musleabihf", image_tag: "arm-musleabihf", wheel: false },
          { target: "arm-unknown-linux-musleabi", image_tag: "arm-musleabi", wheel: false },
        ]
    container:
      image: docker://messense/rust-musl-cross:${{ matrix.platform.image_tag }}
      env:
        CFLAGS_armv7_unknown_linux_musleabihf: '-mfpu=vfpv3-d16'
    steps:
      - uses: actions/checkout@v2
      - name: Build wheels - manylinux
        uses: messense/maturin-action@main
        with:
          target: ${{ matrix.platform.target }}
          manylinux: auto
          container: off
          args: --release -o dist --strip
      - name: Build wheels - musllinux
        if: matrix.platform.wheel
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          manylinux: musllinux_1_1
          container: off
          args: --release --out dist --strip
      - name: Upload wheels
        if: matrix.platform.wheel
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
          if-no-files-found: error
      - name: Upx compress binary
        uses: crazy-max/ghaction-upx@v1
        with:
          version: latest
          files: target/${{ matrix.platform.target }}/release/axum-web
      - name: Upload binary artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform.target }}-bin
          path: target/${{ matrix.platform.target }}/release/axum-web
          if-no-files-found: error
      - name: Archive binary
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czvf axum-web-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz axum-web
          shasum -a 256 axum-web-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz > axum-web-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz.sha256
          cd -
      - name: Upload binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.platform.target }}/release/axum-web*.tar.gz*
          file_glob: true
          overwrite: true
          tag: "refs/tags/${{ github.event.inputs.tag }}"
  linux-others:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          platform:
            - target: "armv5te-unknown-linux-musleabi"
              image_tag: "armv5te-musleabi"
              cargo_extra_args: --no-default-features --features rustls-tls 
      container:
        image: docker://messense/rust-musl-cross:${{ matrix.platform.image_tag }}
      steps:
        - uses: actions/checkout@v2
        - name: Build
          env:
            RUSTFLAGS: -C target-feature=+crt-static -C link-arg=-s
          run: |
            cargo build --release --target ${{ matrix.platform.target }} ${{ matrix.platform.cargo_extra_args }}
        - name: Upx compress binary
          uses: crazy-max/ghaction-upx@v1
          with:
            version: v3.95  # v3.96 breaks mipsel, https://github.com/upx/upx/issues/504
            files: target/${{ matrix.platform.target }}/release/axum-web
        - name: Upload binary artifacts
          uses: actions/upload-artifact@v2
          with:
            name: ${{ matrix.platform.target }}-bin
            path: target/${{ matrix.platform.target }}/release/axum-web
            if-no-files-found: error
        - name: Archive binary
          run: |
            cd target/${{ matrix.platform.target }}/release
            tar czvf axum-web-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz axum-web
            shasum -a 256 axum-web-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz > axum-web-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz.sha256
            cd -
        - name: Upload binary to GitHub Release
          uses: svenstaro/upload-release-action@v2
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            file: target/${{ matrix.platform.target }}/release/axum-web*.tar.gz*
            file_glob: true
            overwrite: true
            tag: "refs/tags/${{ github.event.inputs.tag }}"
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        platform:
          - arch: x64
            target: x86_64-pc-windows-msvc
          - arch: x86
            target: i686-pc-windows-msvc
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: ${{ matrix.platform.arch }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --strip
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
          if-no-files-found: error
      - name: Upload binary artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows-${{ matrix.platform.arch }}-bin
          path: target/${{ matrix.platform.target }}/release/axum-web.exe
          if-no-files-found: error
      - name: Archive binary
        run: |
          cd target/${{ matrix.platform.target }}/release
          7z a axum-web.zip axum-web.exe
          cd -
      - name: Upload binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: axum-web-${{ github.event.inputs.tag }}.windows-${{ matrix.platform.arch }}.zip
          file: target/${{ matrix.platform.target }}/release/axum-web.zip
          overwrite: true
          tag: "refs/tags/${{ github.event.inputs.tag }}"
  openwrt:
      name: OpenWrt Package - ${{ matrix.target.arch }}
      runs-on: ubuntu-latest
      needs: [ linux,linux-others ]
      environment: OpenWrt
      strategy:
        matrix:
          target:
            - arch: "aarch64_generic"
              sdk: "https://downloads.openwrt.org/snapshots/targets/rockchip/armv8/openwrt-sdk-rockchip-armv8_gcc-11.3.0_musl.Linux-x86_64.tar.xz"
            - arch: "arm_cortex-a9"
              sdk: "https://downloads.openwrt.org/snapshots/targets/bcm53xx/generic/openwrt-sdk-bcm53xx-generic_gcc-11.3.0_musl_eabi.Linux-x86_64.tar.xz"
            - arch: "aarch64_cortex-a53"
              sdk: "https://downloads.openwrt.org/snapshots/targets/bcm27xx/bcm2710/openwrt-sdk-bcm27xx-bcm2710_gcc-11.3.0_musl.Linux-x86_64.tar.xz"
            - arch: "aarch64_cortex-a72"
              sdk: "https://downloads.openwrt.org/snapshots/targets/bcm27xx/bcm2711/openwrt-sdk-bcm27xx-bcm2711_gcc-11.3.0_musl.Linux-x86_64.tar.xz"
            - arch: "x86_64"
              sdk: "https://downloads.openwrt.org/snapshots/targets/x86/64/openwrt-sdk-x86-64_gcc-11.3.0_musl.Linux-x86_64.tar.xz"
            - arch: "i386_pentium4"
              sdk: "https://downloads.openwrt.org/snapshots/targets/x86/generic/openwrt-sdk-x86-generic_gcc-11.3.0_musl.Linux-x86_64.tar.xz"
            - arch: "arm_mpcore"
              sdk: "https://downloads.openwrt.org/snapshots/targets/oxnas/ox820/openwrt-sdk-oxnas-ox820_gcc-11.3.0_musl_eabi.Linux-x86_64.tar.xz"
            - arch: "arm_cortex-a5_vfpv4"
              sdk: "https://downloads.openwrt.org/snapshots/targets/at91/sama5/openwrt-sdk-at91-sama5_gcc-11.3.0_musl_eabi.Linux-x86_64.tar.xz"
            - arch: "arm_cortex-a7_neon-vfpv4"
              sdk: "https://downloads.openwrt.org/snapshots/targets/ipq40xx/generic/openwrt-sdk-ipq40xx-generic_gcc-11.3.0_musl_eabi.Linux-x86_64.tar.xz"
      steps:
        - uses: actions/checkout@v2
        - name: Install build requirements
          run: |
            sudo apt-get update
            sudo apt-get install -y build-essential ccache ecj fastjar file g++ gawk \
            gettext git java-propose-classpath libelf-dev libncurses5-dev \
            libncursesw5-dev libssl-dev python python2.7-dev python3 unzip wget \
            python3-distutils python3-setuptools python3-dev rsync subversion \
            swig time xsltproc zlib1g-dev
        - name: Install OpenWrt SDK
          run: |
            wget -O openwrt-sdk.tar.xz ${{ matrix.target.sdk }}
            xz -q -d openwrt-sdk.tar.xz && tar -xvf openwrt-sdk.tar
            mv -f openwrt-sdk-* openwrt-sdk
        - name: Build Package
          run: |
            echo "src-link axumweb $GITHUB_WORKSPACE/openwrt" > openwrt-sdk/feeds.conf
            echo 'CONFIG_PACKAGE_axum-web=y
            CONFIG_PACKAGE_luci-app-axum-web=y
            ' >> openwrt-sdk/.config
            cd openwrt-sdk
            cat feeds.conf.default >> feeds.conf
            cat feeds.conf
            ./scripts/feeds update -a > /dev/null
            make defconfig
            ./scripts/feeds install -d y -f -a
            make package/axum-web/compile V=s
            make package/luci-app-axum-web/compile V=s
            tree bin/packages/
        - name: Archive package
          uses: actions/upload-artifact@v2
          with:
            name: axum-web-openwrt-${{ matrix.target.arch }}
            path: openwrt-sdk/bin/packages/*/axumweb/axum-web*.ipk
            if-no-files-found: error
        - name: Archive luci packages
          uses: actions/upload-artifact@v2
          if: ${{ matrix.target.arch == 'aarch64_generic' }}
          with:
            name: axum-web-openwrt-${{ matrix.target.arch }}
            path: openwrt-sdk/bin/packages/*/axumweb/luci-*.ipk
            if-no-files-found: error
        - name: Upload package to GitHub Release
          uses: svenstaro/upload-release-action@v2
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            file_glob: true
            overwrite: true
            file: openwrt-sdk/bin/packages/*/axumweb/axum-web*.ipk
            tag: "refs/tags/${{ github.event.inputs.tag }}"
        - name: Upload luci packages to GitHub Release
          uses: svenstaro/upload-release-action@v2
          if: ${{ matrix.target.arch == 'aarch64_generic' }}
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            file_glob: true
            overwrite: true
            file: openwrt-sdk/bin/packages/*/axumweb/luci-*.ipk
            tag: "refs/tags/${{ github.event.inputs.tag }}"

# release:
#       name: Release
#       runs-on: ubuntu-latest
#       environment:
#         name: PyPI
#         url: https://pypi.org/project/axum-web/
#       needs: [ linux, macos ]
#       steps:
#         - uses: actions/download-artifact@v2
#           with:
#             name: wheels
#         - uses: actions/setup-python@v2
#           with:
#             python-version: 3.9
#         - name: Publish to PyPi
#           env:
#             TWINE_USERNAME: __token__
#             TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
#           run: |
#             pip install --upgrade twine
#             twine upload --skip-existing *
